---
config:
  theme: base
  layout: dagre
---
flowchart TB
 subgraph APP_ROUTER_LAYER["App Router (Routing Only)"]
        APP_PAGES["App Router Pages <br>• /vehicles <br>• /work-orders <br>• /service-tasks <br>• /service-schedules <br>• /service-programs <br>• /contacts <br>• /issues <br>• /parts-inventory <br>• /settings"]
        LAYOUT_TSX["layout.tsx <br>• Global Layout"]
  end
 subgraph VEHICLE_FEATURE["Vehicle Feature"]
        VEHICLE_COMPONENTS["components/ <br>• VehicleList <br>• VehicleFormContainer"]
        VEHICLE_HOOKS["hooks/ <br>• useVehicles.ts"]
        VEHICLE_API["api/ <br>• vehicleApi.ts"]
        VEHICLE_TYPES["types/ <br>• vehicle.types.ts"]
        VEHICLE_CONFIG["config/ <br>• vehicleTableColumns.ts"]
        VEHICLE_UTILS["utils/ <br>• vehicleEnumHelper.ts"]
  end
 subgraph OTHER_FEATURES["Other Features"]
        OTHER_FEATURE_MODULES["work-order/ <br>service-program/ <br>service-schedule/ <br>service-task/ <br>issue/ <br>inventory-item/ <br>vehicle-group/ <br>vehicle-status/ <br>technician/ <br>user/ <br>• Same structure as Vehicle"]
  end
 subgraph FEATURES_LAYER["Features (Domain-Driven)"]
        VEHICLE_FEATURE
        OTHER_FEATURES
  end
 subgraph SHARED_COMPONENTS_LAYER["Shared Components"]
        UI_COMPONENTS["components/ui/ <br>• Button/ (Primary, Secondary, Option) <br>• Detail/ (DetailFieldRow) <br>• Feedback/ (Loading, StatusBadge) <br>• Filter/, Form/, Icons/ <br>• Layout/, Modal/, Table/, Tabs/"]
  end
 subgraph GLOBAL_INFRASTRUCTURE_LAYER["Global Infrastructure"]
        GLOBAL_HOOKS["hooks/ <br>• useDebounce.ts <br>• Global custom hooks"]
        LIB_CONFIG["lib/ <br>• axios.ts <br>• Third-party configs"]
        GLOBAL_TYPES["types/ <br>• pagedResponse.ts <br>• Global TypeScript types"]
        GLOBAL_UTILS["utils/ <br>• dateTimeUtils.ts <br>• Cross-feature utilities"]
  end
 subgraph STATE_MANAGEMENT_LAYER["State Management"]
        REACT_QUERY["React Query <br>• Server State <br>• API Data Caching <br>• Synchronization"]
        LOCAL_STATE["Local State <br>• Component State <br>• Form Inputs <br>• Temporary UI State"]
  end
 subgraph FRONTEND_GRAPH["Frontend - Next.js (Feature-Based Architecture)"]
        APP_ROUTER_LAYER
        FEATURES_LAYER
        SHARED_COMPONENTS_LAYER
        GLOBAL_INFRASTRUCTURE_LAYER
        STATE_MANAGEMENT_LAYER
  end
 subgraph API_LAYER["API Layer"]
        APIGW["Web Host <br>• Program.cs"]
        MIDDLEWARE["Middleware <br>• JWT Bearer Auth <br>• CORS Policies <br>• Global Exception Handlers <br>• HTTPS Redirection"]
        CTRLS["Controllers - REST <br>• Vehicles <br>• WorkOrders <br>• Inspections <br>• ..."]
        SWAGGER["Swagger UI / OpenAPI"]
  end
 subgraph APPLICATION_CONTRACTS_GRAPH["Contracts/Interfaces"]
        AUTH_USER_DTO["Auth User DTO"]
        I_JWT_SVC["JWT Service Interface"]
        I_LOGGER_SVC["Logger Interface"]
        I_REPOS["Repository Interfaces <br>• IGenericRepository"]
        I_SVC["Service Interfaces <br>• IInvoicePdfService <br>• IServiceReminderStatusUpdater"]
        I_CURRENT_USER_SVC["Current User Service Interface"]
  end
 subgraph APP_EXCEPTIONS_GRAPH["Exceptions"]
        EXCEPTIONS["Custom Exceptions"]
  end
 subgraph APP_REQUEST_GRAPH["Requests"]
        APP_VEHICLE_COMMANDS["Commands <br>• CreateVehicleCommand <br>• UpdateVehicleCommand <br>• DeleteVehicleCommand"]
        APP_VEHICLE_QUERIES["Queries <br>• GetVehicleByIdQuery <br>• GetAllVehiclesQuery"]
  end
 subgraph APP_VEHICLE_GRAPH["Vehicles"]
        APP_REQUEST_GRAPH
        APP_VEHICLE_VALIDATORS["Validators <br>• CreateVehicleValidator <br>• UpdateVehicleValidator <br>• DeleteVehicleValidator"]
        APP_VEHICLE_HANDLERS["Handlers <br>• CreateVehicleHandler <br>• UpdateVehicleHandler <br>• DeleteVehicleHandler"]
  end
 subgraph FEATURES_GRAPH["Features"]
        APP_VEHICLE_GRAPH
  end
 subgraph MAPPER_GRAPH["Mapping Profiles <br>• Uses AutoMapper"]
        VEHICLE_MAPPER["Vehicle Mapping Profile"]
  end
 subgraph APPLICATION_LAYER["Application Layer"]
        APPLICATION_CONTRACTS_GRAPH
        APP_EXCEPTIONS_GRAPH
        FEATURES_GRAPH
        MAPPER_GRAPH
        APPLICATION_DI_REG["Application Service Registration <br>• Register AutoMapper, MediatR, FluentValidation into the DI container"]
  end
 subgraph DOMAIN_ENTITIES_GRAPH["Entities"]
        DOMAIN_ENTITIES["Vehicle <br>• ID: integer <br>• Name: string <br>• etc."]
  end
 subgraph DOMAIN_LAYER["Domain Layer"]
        DOMAIN_ENTITIES_GRAPH
  end
 subgraph BACKGROUND_SERVICES_GRAPH["Background Services"]
        UPDATE_SERVICE_REMINDER_STATUS_BG_SVC["UpdateServiceReminderStatusBackgroundService"]
  end
 subgraph INFRA_SERVICES_GRAPH["Services"]
        LOGGER_SVC["Logger"]
        PDF_SVC["PDF Generator"]
        PDF_TEMPLATE["PDF Template"]
        CURRENT_USER_SVC["Current User Service"]
        JWT_SVC["JWT Service"]
  end
 subgraph INFRASTRUCTURE_GRAPH["Infrastructure"]
        BACKGROUND_SERVICES_GRAPH
        INFRA_SERVICES_GRAPH
        INFRASTRUCTURE_DI_REG["Infrastructure Service Registration"]
  end
 subgraph PERSISTENCE_GRAPH["Persistence (Database)"]
        DB_CONTEXT["MS SQL Database <br>• EF Core DbContext <br>• OmnipulseDatabaseContext"]
        REPOS["Repositories <br>• GenericRepository <br>• Entity Repositories"]
        SEEDERS["Seeders <br>• Dev Only"]
        PERSISTENCE_DI_REG["Persistence Service Registration"]
  end
 subgraph INFRASTRUCTURE_LAYER["Infrastructure Layer"]
        INFRASTRUCTURE_GRAPH
        PERSISTENCE_GRAPH
  end
 subgraph BACKEND_GRAPH["Backend - ASP.NET Core"]
        API_LAYER
        APPLICATION_LAYER
        DOMAIN_LAYER
        INFRASTRUCTURE_LAYER
  end
    VEHICLE_API -. HTTP Requests .-> CTRLS
    CTRLS -. HTTP Responses .-> VEHICLE_API
    LIB_CONFIG -. Axios Instance .-> VEHICLE_API
    APP_PAGES -. routes to .-> VEHICLE_COMPONENTS
    VEHICLE_COMPONENTS -. uses hooks .-> VEHICLE_HOOKS
    VEHICLE_HOOKS -. calls API .-> VEHICLE_API
    VEHICLE_HOOKS -. manages state .-> REACT_QUERY
    VEHICLE_COMPONENTS -. uses types .-> VEHICLE_TYPES
    VEHICLE_COMPONENTS -. uses utils .-> VEHICLE_UTILS
    VEHICLE_COMPONENTS -. uses config .-> VEHICLE_CONFIG
    VEHICLE_COMPONENTS -. uses shared UI .-> UI_COMPONENTS
    VEHICLE_HOOKS -. extends .-> GLOBAL_HOOKS
    VEHICLE_API -. uses .-> LIB_CONFIG
    VEHICLE_TYPES -. extends .-> GLOBAL_TYPES
    VEHICLE_UTILS -. uses .-> GLOBAL_UTILS
    REACT_QUERY -. server state .-> VEHICLE_API
    LOCAL_STATE -. component state .-> VEHICLE_COMPONENTS
    APP_PAGES -. uses layout .-> LAYOUT_TSX
    LAYOUT_TSX -. uses shared components .-> UI_COMPONENTS
    API_LAYER --> APPLICATION_LAYER & INFRASTRUCTURE_LAYER
    APPLICATION_LAYER --> DOMAIN_LAYER
    INFRA_SERVICES_GRAPH -. implements .-> APPLICATION_CONTRACTS_GRAPH
    PDF_SVC -. uses template .-> PDF_TEMPLATE
    CTRLS -. "[Request Data Flow] 1. Controller creates request (command/query). Let's say we want to create a vehicle so we create a CreateVehicleCommand." .-> APP_REQUEST_GRAPH
    APP_REQUEST_GRAPH -. "[Request Data Flow] 2. Send command to validator" .-> APP_VEHICLE_VALIDATORS
    APP_VEHICLE_VALIDATORS -. "[Request Data Flow] 3. Validator validated command. Send command to handler" .-> APP_VEHICLE_HANDLERS
    APP_VEHICLE_HANDLERS -. "[Request Data Flow] 4. Send command to AutoMapper" .-> VEHICLE_MAPPER
    VEHICLE_MAPPER -. "[Request Data Flow] 5. AutoMapper mapped command to Vehicle domain entity. Send Vehicle domain entity back to handler" .-> APP_VEHICLE_HANDLERS
    APP_VEHICLE_HANDLERS -. "[Request Data Flow] 6. Handler validated business rules. Send Vehicle domain entity to repository." .-> REPOS
    REPOS -. "[Request Data Flow] 7. Repository persisted Vehicle domain entity. Send ID of persisted Vehicle domain entity back to handler." .-> APP_VEHICLE_HANDLERS
    APP_VEHICLE_HANDLERS -. "[Request Data Flow] 8. Send ID of persisted Vehicle domain entity back to controller." .-> CTRLS
    APIGW -. registers middleware .-> MIDDLEWARE
    APIGW -. registers controllers .-> CTRLS
    APIGW -. registers swagger .-> SWAGGER
    APIGW -. registers Application services .-> APPLICATION_DI_REG
    APIGW -. registers Infrastructure services .-> INFRASTRUCTURE_DI_REG
    APIGW -. registers Persistence services .-> PERSISTENCE_DI_REG
    CTRLS -. uses .-> FEATURES_GRAPH & APPLICATION_CONTRACTS_GRAPH
    MIDDLEWARE -. uses .-> APP_EXCEPTIONS_GRAPH
    APP_VEHICLE_HANDLERS -. uses .-> APPLICATION_CONTRACTS_GRAPH & APP_EXCEPTIONS_GRAPH & APP_VEHICLE_VALIDATORS
    REPOS -. uses .-> DB_CONTEXT
    SEEDERS -. uses .-> DB_CONTEXT
    style VEHICLE_FEATURE stroke-width:2px,stroke:purple, color:purple
    style OTHER_FEATURES stroke-width:2px,stroke:purple, color:purple
    style APP_ROUTER_LAYER stroke-width:3px,stroke:orange, color:orange
    style FEATURES_LAYER stroke-width:3px,stroke:orange, color:orange
    style SHARED_COMPONENTS_LAYER stroke-width:3px,stroke:orange, color:orange
    style GLOBAL_INFRASTRUCTURE_LAYER stroke-width:3px,stroke:orange, color:orange
    style STATE_MANAGEMENT_LAYER stroke-width:3px,stroke:orange, color:orange
    style APP_REQUEST_GRAPH           stroke-width:3px,stroke:green, color:green
    style APP_VEHICLE_GRAPH           stroke-width:3px,stroke:green, color:green
    style APPLICATION_CONTRACTS_GRAPH stroke-width:3px,stroke:green, color:green
    style APP_EXCEPTIONS_GRAPH        stroke-width:3px,stroke:green, color:green
    style FEATURES_GRAPH              stroke-width:3px,stroke:green, color:green
    style MAPPER_GRAPH                stroke-width:3px,stroke:green, color:green
    style DOMAIN_ENTITIES_GRAPH stroke-width:3px,stroke:green, color:green
    style BACKGROUND_SERVICES_GRAPH stroke-width:3px,stroke:green, color:green
    style INFRA_SERVICES_GRAPH      stroke-width:3px,stroke:green, color:green
    style INFRASTRUCTURE_GRAPH      stroke-width:3px,stroke:green, color:green
    style PERSISTENCE_GRAPH         stroke-width:3px,stroke:green, color:green
    style API_LAYER            stroke-width:3px,stroke:blue, color:blue
    style APPLICATION_LAYER    stroke-width:3px,stroke:blue, color:blue
    style DOMAIN_LAYER         stroke-width:3px,stroke:blue, color:blue
    style INFRASTRUCTURE_LAYER stroke-width:3px,stroke:blue, color:blue
    style FRONTEND_GRAPH stroke-width:3px,stroke:red, color:red
