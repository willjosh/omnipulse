FROM mcr.microsoft.com/dotnet/sdk:9.0

# Install system dependencies for PuppeteerSharp
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    procps \
    libxss1 \
    libnss3 \
    libnspr4 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libasound2 \
    libatspi2.0-0 \
    libgtk-3-0 \
    libx11-xcb1 \
    libxcb-dri3-0 \
    libxss1 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libcairo-gobject2 \
    libcairo2 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libgtk-3-0 \
    libgdk-pixbuf2.0-0 \
    libxfixes3 \
    libxdamage1 \
    libxcomposite1 \
    libxrandr2 \
    libxss1 \
    libxtst6 \
    libx11-xcb1 \
    libxcb-dri3-0 \
    libxcb-render0 \
    libxcb-shape0 \
    libxcb-xfixes0 \
    libxcb-glx0 \
    libxcb-keysyms1 \
    libxcb-image0 \
    libxcb-shm0 \
    libxcb-icccm4 \
    libxcb-sync1 \
    libxcb-xinerama0 \
    libxcb-xkb1 \
    libxkbcommon-x11-0 \
    libxcb-randr0 \
    libxcb-render-util0 \
    libxcb-util1 \
    libxcb-xfixes0 \
    libxcb-shape0 \
    libxcb-render0 \
    libxcb-glx0 \
    libxcb-keysyms1 \
    libxcb-image0 \
    libxcb-shm0 \
    libxcb-icccm4 \
    libxcb-sync1 \
    libxcb-xinerama0 \
    libxcb-xkb1 \
    libxkbcommon-x11-0 \
    libxcb-randr0 \
    libxcb-render-util0 \
    libxcb-util1 \
    && rm -rf /var/lib/apt/lists/*

# Install Chromium
RUN apt-get update && apt-get install -y chromium \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables for PuppeteerSharp
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium

WORKDIR /server

# Copy csproj files
COPY server/omnipulse_server.sln ./
COPY server/Directory.Build.props ./
COPY server/src/Api/Api.csproj ./src/Api/
COPY server/src/Core/Application/Application.csproj ./src/Core/Application/
COPY server/src/Core/Domain/Domain.csproj ./src/Core/Domain/
COPY server/src/Infrastructure/Infrastructure/Infrastructure.csproj ./src/Infrastructure/Infrastructure/
COPY server/src/Infrastructure/Persistence/Persistence.csproj ./src/Infrastructure/Persistence/

# Include test project files
COPY server/tests/Application.Test/Application.Test.csproj ./tests/Application.Test/
COPY server/tests/Domain.Test/Domain.Test.csproj ./tests/Domain.Test/
COPY server/tests/FunctionalTests/FunctionalTests.csproj ./tests/FunctionalTests/
COPY server/tests/IntegrationTests/IntegrationTests.csproj ./tests/IntegrationTests/

# Restore all dependencies
RUN dotnet restore omnipulse_server.sln

# Copy source code
COPY server/ .

WORKDIR /server/src/Api

EXPOSE 8080

# Start development server with hot reload
CMD ["dotnet", "watch", "run", "--urls", "http://0.0.0.0:8080"]