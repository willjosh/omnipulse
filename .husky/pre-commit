#!/bin/sh

FRONTEND_DIR="client"
BACKEND_DIR="server"

set -e

echo "========================================\n\t⚙️ Running pre-commit checks\n========================================"

branch="$(git rev-parse --abbrev-ref HEAD)"
if [ "$branch" = "main" ]; then
  echo "❌ You can't commit directly to main - please check out a branch."
  exit 1
fi

##############################
########## FRONTEND ##########
##############################

run_frontend_checks() {
    echo "⚙️ Running frontend checks"
    cd "$FRONTEND_DIR" || exit 1

    # Linting
    echo "🔍 Frontend - Lint"
    npx lint-staged || {
        echo "❌ Frontend - Lint failed"
        exit 1
    }

    # Building
    echo "🧱 Frontend - Build"
    npm run build || {
        echo "❌ Frontend - Build failed"
        exit 1
    }

    cd ..
}

#############################
########## BACKEND ##########
#############################

run_backend_checks() {
    echo "⚙️ Running backend checks"
    cd "$BACKEND_DIR" || exit 1

    # Building
    echo "🧱 Backend - Build"
    dotnet build --nologo || {
        echo "❌ Backend - Build failed"
        exit 1
    }

    # Linting
    echo "🔍 Backend - Lint"
    dotnet format
    dotnet format --verify-no-changes --verbosity quiet || {
        echo "❌ Backend - Lint failed"
        exit 1
    }

    # Testing
    echo "🧪 Backend - Test"
    dotnet test || {
        echo "❌ Backend - Test failed"
        exit 1
    }

    cd ..
}

staged_files=$(git diff --cached --name-only --diff-filter=ACM)
printf "📄 Staged files:\n$staged_files\n"

if echo "$staged_files" | grep -q "^$FRONTEND_DIR/"; then
    run_frontend_checks
fi

if echo "$staged_files" | grep -q "^$BACKEND_DIR/"; then
    run_backend_checks
fi


echo "✅ All pre-commit checks passed!"
