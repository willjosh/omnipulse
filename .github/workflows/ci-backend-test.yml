name: CI - Backend - Test

on:
  push:
    paths: ["server/**"]
  pull_request:
    paths: ["server/**"]

jobs:
  build-and-test:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore server/omnipulse_server.sln

      - name: Build solution
        run: dotnet build server/omnipulse_server.sln --configuration Release --no-restore

      - name: Run tests
        run: |
          dotnet test server \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --logger:"trx;LogFileName=test-results.trx" \
            --results-directory server/tests/coverage

      - name: Install ReportGenerator tool
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate code coverage report
        run: |
          reportgenerator \
            -reports:"server/tests/coverage/**/coverage.cobertura.xml" \
            -targetdir:"server/tests/coverage/report" \
            -reporttypes:"Html,MarkdownSummaryGithub,Cobertura"

      - name: Write to Job Summary
        run: cat server/tests/coverage/report/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

      - name: Create PR comment with coverage and artifact link
        if: github.event_name == 'pull_request'
        run: |
          echo "# [ðŸ“Š Backend - Code Coverage Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" > pr-comment.md
          echo "" >> pr-comment.md
          cat server/tests/coverage/report/SummaryGithub.md >> pr-comment.md

      - name: Write Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: pr-comment.md
          header: coverage-report

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_id }}
          path: |
            server/tests/coverage/**/*.trx
            server/tests/coverage/report/
          retention-days: 30
